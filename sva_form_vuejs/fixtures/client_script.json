[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "DocType",
  "enabled": 1,
  "modified": "2024-12-04 22:12:51.907007",
  "module": "sva_form",
  "name": "Add Options",
  "script": "frappe.ui.form.on('DocType', {\n    async refresh(frm) {\n        if (frm.docname === 'Assessment') {\n            let fields = [];\n            let response = await frappe.call({\n                method: 'sva_form_vuejs.controllers.api.get_fields',\n            });\n\n            if (response?.message?.length) {\n                fields = response.message;\n            }\n\n            frm.add_custom_button('Add Options', () => {\n                let dialog = new frappe.ui.Dialog({\n                    title: 'Add Options for Assessment',\n                    fields: [\n                        {\n                            label: 'Question',\n                            fieldname: 'question',\n                            fieldtype: 'Autocomplete',\n                            reqd: true,\n                            options: fields?.map(field => field?.label),\n                            onchange: async function () {\n                                const selected_label = dialog.get_value('question');\n                                const selected_field = fields?.find(f => f.label === selected_label);\n                                if (selected_field) {\n                                    try {\n                                        let r = await frappe.call({\n                                            method: 'sva_form_vuejs.controllers.api.get_option',\n                                            args: { \n                                                filters: {\n                                                    field: selected_field.fieldname, \n                                                    ref_doctype: 'Assessment' \n                                                }\n                                            },\n                                        });\n                                        if (r?.message?.length) {\n                                            let options_table = dialog.fields_dict.options.grid;\n                                            options_table.df.data = []; // Clear existing rows\n                                            r?.message?.forEach(option => {\n                                                options_table.df.data.push({\n                                                    label: option.label,\n                                                    code: option.level,\n                                                    score: option.score\n                                                });\n                                            });\n                                            options_table.refresh();\n                                        }\n                                    } catch (error) {\n                                        frappe.msgprint(__('Failed to fetch options: ') + error.message);\n                                    }\n                                }\n                            }\n                        },\n                        {\n                            label: 'Options',\n                            fieldname: 'options',\n                            fieldtype: 'Table',\n                            fields: [\n                                {\n                                    fieldname: 'label',\n                                    label: 'Label',\n                                    fieldtype: 'Small Text',\n                                    in_list_view: 1,\n                                    reqd: true\n                                },\n                                {\n                                    fieldname: 'code',\n                                    label: 'Code',\n                                    fieldtype: 'Data',\n                                    in_list_view: 1,\n                                    reqd: true\n                                },\n                                {\n                                    fieldname: 'score',\n                                    label: 'Score',\n                                    fieldtype: 'Float',\n                                    in_list_view: 1,\n                                    reqd: true\n                                }\n                            ]\n                        }\n                    ],\n                    primary_action_label: 'Save',\n                    size: 'extra-large',\n                    async primary_action(data) {\n                        if (!data?.question || data?.options?.length === 0) {\n                            frappe.msgprint(__('Please provide a question and at least one option.'));\n                            return;\n                        }\n\n                        let field = fields?.find(f => f.label === data?.question);\n\n                        if (field) {\n                            try {\n                                let existing_records = await frappe.call({\n                                    method: 'frappe.client.get_list',\n                                    args: {\n                                        doctype: 'Field Options',\n                                        filters: {\n                                            field: field?.fieldname,\n                                            ref_doctype: 'Assessment'\n                                        },\n                                        fields: ['name', 'code']\n                                    }\n                                });\n\n                                let existing_codes = existing_records?.message?.map(r => r.code);\n\n                                let docs_to_insert = [];\n                                let docs_to_update = [];\n                                let docs_to_delete = existing_records?.message?.filter((record)=> !data?.options?.map((option)=> option.code).includes(record.code));\n                                \n                                data?.options?.forEach(option => {\n                                    if (existing_codes?.includes(option.code)) {\n                                        let record = existing_records?.message?.find(r => r.code === option?.code);\n                                        docs_to_update.push({\n                                            name: record.name,\n                                            label: option.label,\n                                            score: option.score || 0\n                                        });\n                                    } else {\n                                        docs_to_insert.push({\n                                            doctype: \"Field Options\",\n                                            ref_doctype: 'Assessment',\n                                            field: field.fieldname,\n                                            label: option.label,\n                                            code: option.code,\n                                            score: option.score || 0\n                                        });\n                                    }\n                                });\n                                // console.log(docs_to_insert,'i',docs_to_update,'u',docs_to_delete,'d')\n\n                                if (docs_to_insert?.length) {\n                                  let res= await frappe.call({\n                                        method: 'frappe.client.insert_many',\n                                        args: { docs: docs_to_insert }\n                                    });\n                                    if (res?.message?.length){\n                                        frappe.show_alert({\n                                            message: __('Options saved successfully!'),\n                                            indicator: 'green'\n                                        });\n                                    }\n                                }\n\n                                if (docs_to_update?.length) {\n                                    let res = await frappe.call({\n                                        method: 'sva_form_vuejs.controllers.api.update_many',\n                                        args: {\n                                            dt: 'Field Options',\n                                            docs: JSON.stringify(docs_to_update)\n                                        }\n                                         \n                                    });\n                                    if (res?.message?.status == \"success\"){\n                                        frappe.show_alert({\n                                            message: __('Options updated successfully!'),\n                                            indicator: 'green'\n                                        });\n                                    }\n                                }\n                                \n                                if (docs_to_delete?.length) {\n                                    let res = await frappe.call({\n                                        method: 'sva_form_vuejs.controllers.api.delete_many',\n                                        args: {\n                                            dt: 'Field Options',\n                                            docs: JSON.stringify(docs_to_delete)\n                                        }\n                                        \n                                    });\n                                    if (res?.message?.status == \"success\"){\n                                        frappe.show_alert({\n                                            message: __('Options deleted successfully!'),\n                                            indicator: 'green'\n                                         });\n                                    }\n                                }\n\n                            } catch (error) {\n                                frappe.msgprint(__('Error saving options: ') + error.message);\n                            }\n                        } else {\n                            frappe.msgprint(__('Invalid question selection.'));\n                        }\n\n                        dialog.hide();\n                    }\n                });\n                dialog.show();\n            });\n        }\n    }\n});\n",
  "view": "Form"
 }
]