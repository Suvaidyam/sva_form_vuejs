[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "DocType",
  "enabled": 1,
  "modified": "2024-12-01 18:02:16.555732",
  "module": "sva_form",
  "name": "Add Options",
  "script": "frappe.ui.form.on('DocType', {\n    async refresh(frm) {\n        if (frm.docname === 'Assessment') {\n            var fields = []\n            var options = []\n            let response = await frappe.call({\n                    method: 'sva_form_vuejs.controllers.api.get_fields',\n                });;\n            if(response?.message?.length){\n                fields = response.message;\n            }\n            frm.add_custom_button('Add Options', () => {\n                let dialog = new frappe.ui.Dialog({\n                    title: 'Add Options for Assessment',\n                    fields: [\n                        {\n                            label: 'Question',\n                            fieldname: 'question',\n                            fieldtype: 'Autocomplete',\n                            reqd: true,\n                            options: fields.map(field => field.label),\n                            // onchange: function () {\n                            //     frappe.call({\n                            //         method: '',\n                            //         args: { tab_name: dialog.get_value('tab') },\n                            //         callback: function (r) {\n                            //             let questionField = dialog.get_field('question');\n                            //             questionField.df.options = r.message.map(field => field.fieldname);\n                            //             questionField.refresh();\n                            //         }\n                            //     });\n                            // }\n                        },\n                        {\n                            label: 'Options',\n                            fieldname: 'options',\n                            fieldtype: 'Table',\n                            fields: [\n                                {\n                                    fieldname: 'label',\n                                    label: 'Label',\n                                    fieldtype: 'Small Text',\n                                    \"in_list_view\":1,\n                                    reqd: true\n                                },\n                                {\n                                    fieldname: 'code',\n                                    label: 'Code',\n                                    fieldtype: 'Data',\n                                    \"in_list_view\":1,\n                                    reqd: true\n                                },\n                                {\n                                    fieldname: 'score',\n                                    label: 'Score',\n                                    fieldtype: 'Float',\n                                    \"in_list_view\":1,\n                                    reqd: true\n                                }\n                            ]\n                        }\n                    ],\n                    primary_action_label: 'Save',\n                    size: 'extra-large',\n                    primary_action(data) {\n                        if (!data.question || data.options.length === 0) {\n                            frappe.msgprint(__('Please provide a question and at least one option.'));\n                            return;\n                        }\n                    \n                        let field = fields.filter(f => f.label === data.question)[0];\n                    \n                        if (field) {\n                            let docs = data.options?.map((option)=>{\n                                return{\n                                    doctype: \"Field Options\",\n                                    ref_doctype: 'Assessment',\n                                    field: field.fieldname,\n                                    label: option.label,\n                                    code: option.code,\n                                    score: option.score\n                                }\n                            })\n                            try {\n                                new Promise((resolve, reject) => {\n                                    frappe.call({\n                                        method: 'frappe.client.insert_many',\n                                        args: { \n                                            docs: docs\n                                        },\n                                        callback: function (r) {\n                                            if (r.exc) {\n                                                reject(r.exc);  // Reject if there's an error in the response\n                                            } else {\n                                                console.log(r, 'res');\n                                                resolve(r);  // Resolve if everything is fine\n                                            }\n                                        }\n                                    });\n                                });\n                            } catch (error) {\n                                    frappe.msgprint(__('Error saving option: ') + error.message);\n                                    return;\n                                }\n                        } else {\n                            frappe.msgprint(__('Invalid question selection.'));\n                        }\n                    \n                        dialog.hide();\n                    }\n\n                });\n\n                // Fetch available tabs dynamically\n                \n\n                dialog.show();\n            });\n        }\n    }\n});\n",
  "view": "Form"
 }
]